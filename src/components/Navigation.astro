---
import { getCollection } from 'astro:content';

const homeCollection = await getCollection('home');
const data = homeCollection[0].data;

// Créer la navigation avec les catégories
const navigation = [
  { title: "Accueil", href: "/" },
  ...data.blogCategories.map(category => ({
    title: category.title,
    href: `/blog/categories/${category.id}`
  }))
];
---

<nav class="navbar">
  <div class="navbar-container">
    <a href="/" class="logo">Taxi Buëch</a>
    <button class="mobile-menu-toggle" aria-label="Menu">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
    <div class="nav-links">
      {navigation.map(item => (
        <div class="nav-item">
          <a href={item.href} class="nav-link">
            {item.title}
          </a>
        </div>
      ))}
    </div>
  </div>
</nav>

<script>
  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
  const navLinks = document.querySelector('.nav-links');
  const navItems = document.querySelectorAll('.nav-item');

  if (mobileMenuToggle && navLinks) {
    mobileMenuToggle.addEventListener('click', () => {
      mobileMenuToggle.classList.toggle('active');
      navLinks.classList.toggle('active');
    });
  }

</script>

<style>
  .navbar {
    background: white;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
    z-index: 1000;
  }

  .navbar-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: rgb(var(--accent));
    text-decoration: none;
  }

  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
  }

  .mobile-menu-toggle .bar {
    width: 100%;
    height: 3px;
    background-color: rgb(var(--accent));
    transition: all 0.3s ease;
  }

  .mobile-menu-toggle.active .bar:nth-child(1) {
    transform: translateY(9px) rotate(45deg);
  }

  .mobile-menu-toggle.active .bar:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-toggle.active .bar:nth-child(3) {
    transform: translateY(-9px) rotate(-45deg);
  }

  .nav-links {
    display: flex;
    gap: 2rem;
    align-items: center;
  }

  .nav-item {
    position: relative;
  }

  .nav-link {
    color: rgb(var(--text-primary));
    text-decoration: none;
    font-size: 1rem;
    padding: 0.5rem;
    transition: color 0.3s ease;
  }

  .nav-link:hover {
    color: rgb(var(--accent));
  }

  .nav-cta {
    background: rgb(var(--accent));
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .nav-cta:hover {
    background: rgb(var(--accent-dark));
  }

  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 0;
      right: -100%;
      width: 80%;
      max-width: 400px;
      height: 100vh;
      background: white;
      flex-direction: column;
      padding: 5rem 2rem;
      transition: right 0.3s ease;
      box-shadow: -2px 0 4px rgba(0,0,0,0.1);
      overflow-y: auto;
    }

    .nav-links.active {
      right: 0;
    }

    .nav-item {
      width: 100%;
    }

    .nav-link {
      width: 100%;
      padding: 1rem 0;
    }

    .dropdown-menu {
      position: static;
      box-shadow: none;
      padding: 0;
      margin-left: 1rem;
      display: none;
    }

    .dropdown-item {
      padding: 0.5rem 1rem;
    }

    .nav-cta {
      width: 100%;
      text-align: center;
      margin-top: 1rem;
    }
  }
</style>