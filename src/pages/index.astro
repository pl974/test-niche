---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Hero from '../components/Hero.astro';
import ServiceCard from '../components/ServiceCard.astro';
import FeatureGrid from '../components/FeatureGrid.astro';
import CTASection from '../components/CTASection.astro';
import BlogGrid from '../components/BlogGrid.astro';
import CategoryFilter from '../components/CategoryFilter.astro';
import PartnershipCTA from '../components/PartnershipCTA.astro';
import NewsletterSection from '../components/NewsletterSection.astro';
import * as Icons from 'lucide-astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

const homeCollection = await getCollection('home');
const data = homeCollection[0].data;

const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const title = "Site Template";
const description = "Template adaptable pour tout type de site";
---

<Layout title={title}>
	<main>
		<Hero
			title="Template Universel"
			subtitle="Une base solide pour votre projet web"
			image="https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=2000"
		>
			<div class="hero-cta">
				<a href="#contact" class="cta-button">Commencer →</a>
			</div>
		</Hero>

		<section class="trust-badges">
			<div class="trust-badges-container">
				<h2 class="section-title">Nos Points Forts</h2>
				<p class="trust-intro">Notre engagement pour vous offrir un service de qualité se traduit par des valeurs fortes et une expertise reconnue. Découvrez les points clés qui font notre différence et notre réussite au quotidien.</p>
				<FeatureGrid features={[
					{
						icon: "Shield",
						title: "Fiabilité",
						description: "Des solutions éprouvées"
					},
					{
						icon: "Award",
						title: "Expertise",
						description: "Une équipe expérimentée"
					},
					{
						icon: "Star",
						title: "Qualité",
						description: "Des résultats garantis"
					}
				]} />
			</div>
		</section>

		<section class="blog-posts">
			<h2 class="section-title">Articles Récents</h2>
			<p class="section-subtitle">Découvrez nos derniers articles</p>
			<CategoryFilter categories={data.blogCategories} />
			<BlogGrid posts={sortedPosts.slice(0, 12)} />
		</section>

		<section class="about-section">
			<div class="about-content">
				<h2 class="section-title">À Propos</h2>
				<p>Une description détaillée de votre entreprise ou projet.</p>
			</div>
			<img
				src="https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=800"
				alt="À propos"
				class="about-image"
			/>
		</section>

		<PartnershipCTA />
	</main>
</Layout>

<script>
	// Gestion de la pagination et du filtrage
	const blogGrid = document.querySelector('.blog-grid');
	const categoryButtons = document.querySelectorAll('.category-button');
	const paginationDots = document.querySelectorAll('.pagination-dot');
	let currentPage = 1;
	let currentCategory = 'all';

	categoryButtons.forEach(button => {
		button.addEventListener('click', () => {
			const category = button.dataset.category;
			if (category === currentCategory) return;

			// Mettre à jour l'état actif des boutons
			categoryButtons.forEach(b => b.classList.remove('active'));
			button.classList.add('active');

			// Filtrer les articles
			const cards = document.querySelectorAll('.blog-card');
			cards.forEach(card => {
				if (category === 'all' || card.dataset.category === category) {
					card.style.display = 'block';
				} else {
					card.style.display = 'none';
				}
			});

			currentCategory = category;
		});
	});

	paginationDots.forEach(dot => {
		dot.addEventListener('click', async () => {
			const page = parseInt(dot.dataset.page);
			if (page === currentPage) return;

			// Mettre à jour l'état actif des points
			paginationDots.forEach(d => d.removeAttribute('aria-current'));
			dot.setAttribute('aria-current', 'page');

			// Effet de transition
			blogGrid.style.opacity = '0';
			
			// Charger les nouveaux articles
			const response = await fetch(`/api/blog-posts?page=${page}`);
			const posts = await response.json();
			
			// Mettre à jour la grille
			blogGrid.innerHTML = posts.map(post => `
				<a href="/blog/${post.slug}" class="blog-card">
					<img src="${post.data.heroImage}" alt="${post.data.title}" />
					<div class="blog-content">
						<span class="blog-category">${post.data.category}</span>
						<h3>${post.data.title}</h3>
						<p>${post.data.description}</p>
						<span class="blog-date">${new Date(post.data.pubDate).toLocaleDateString('fr-FR', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}</span>
					</div>
				</a>
			`).join('');

			// Afficher les nouveaux articles
			blogGrid.style.opacity = '1';
			currentPage = page;
		});
	});
</script>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 100%;
		max-width: calc(100% - 2rem);
		color: rgb(var(--text-primary));
		font-size: 20px;
		line-height: 1.6;
	}
	.hero-section {
		position: relative;
		height: 600px;
		margin: -1rem -1rem 4rem -1rem;
		overflow: hidden;
	}
	.hero-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
		filter: brightness(0.7);
	}
	.hero-content {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		text-align: center;
		color: white;
		width: 90%;
		max-width: 800px;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.section-title {
		text-align: center;
		font-size: 2.5rem;
		font-weight: 700;
		color: rgb(var(--accent-dark));
		margin-bottom: 1rem;
	}
	.section-subtitle {
		text-align: center;
		font-size: 1.2rem;
		color: rgb(var(--text-primary));
		opacity: 0.8;
		margin-bottom: 2rem;
		max-width: 800px;
		margin-left: auto;
		margin-right: auto;
	}
	.trust-badges {
		background: rgb(var(--bg-secondary));
		padding: 4rem 2rem;
		margin: 4rem -1rem;
	}
	.trust-badges-container {
		max-width: 1200px;
		margin: 0 auto;
	}
	.trust-intro {
		text-align: center;
		max-width: 800px;
		margin: 0 auto 3rem;
		font-size: 1.1rem;
		color: rgb(var(--text-primary));
		line-height: 1.6;
	}
	.hero-cta {
		text-align: center;
		margin: 3rem 0;
	}
	.cta-button {
		background: rgb(var(--accent));
		color: white;
		padding: 1rem 2rem;
		border-radius: 8px;
		text-decoration: none;
		font-weight: bold;
		font-size: 1.2rem;
		transition: background-color 0.3s ease;
	}
	.cta-button:hover {
		background: rgb(var(--accent-dark));
	}
	.categories, .blog-posts, .testimonials {
		margin: 4rem 0;
	}
	.features-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
		margin: 2rem 0;
	}
	.about-section {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 4rem;
		align-items: center;
		padding: 4rem 2rem;
		background: rgb(var(--bg-secondary));
		margin: 4rem -1rem;
	}
	.about-image {
		width: 100%;
		height: 400px;
		object-fit: cover;
		border-radius: 12px;
	}
	.about-content {
		max-width: 600px;
	}

	.blog-grid {
		transition: opacity 0.3s ease;
	}

	.blog-categories {
		display: flex;
		gap: 1rem;
		flex-wrap: wrap;
		justify-content: center;
		margin-bottom: 2rem;
	}

	.category-button {
		background: rgb(var(--bg-secondary));
		border: none;
		color: inherit;
		padding: 0.5rem 1rem;
		border-radius: 999px;
		cursor: pointer;
		transition: all 0.3s ease;
		font-size: 0.9rem;
		text-decoration: none;
	}

	.category-button.active {
		background: rgb(var(--accent));
		color: white;
	}

	.category-button:hover {
		background: rgb(var(--accent-light));
		color: white;
	}

	.blog-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 2rem;
		margin: 2rem 0;
	}

	.blog-card {
		background: rgb(var(--card-bg));
		border-radius: 12px;
		overflow: hidden;
		text-decoration: none;
		color: inherit;
		border: 1px solid rgb(var(--border-color));
		transition: transform 0.3s ease;
	}

	.blog-card:hover {
		transform: translateY(-5px);
	}

	.blog-card img {
		width: 100%;
		height: 200px;
		object-fit: cover;
	}

	.blog-content {
		padding: 1.5rem;
	}

	.blog-category {
		background: rgb(var(--accent));
		color: white;
		padding: 0.25rem 0.75rem;
		border-radius: 999px;
		font-size: 0.8rem;
		display: inline-block;
		margin-bottom: 0.5rem;
	}

	.blog-date {
		display: block;
		font-size: 0.9rem;
		color: rgb(var(--text-primary));
		opacity: 0.7;
		margin-top: 1rem;
	}

	.pagination {
		display: flex;
		gap: 0.5rem;
		justify-content: center;
		margin-top: 2rem;
	}

	.pagination-dot {
		width: 2rem;
		height: 2rem;
		border: none;
		border-radius: 999px;
		background: rgb(var(--bg-secondary));
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.pagination-dot[aria-current="page"] {
		background: rgb(var(--accent));
		color: white;
	}
</style>